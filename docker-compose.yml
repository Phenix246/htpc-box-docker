version: "3.4"
services:
  vpn:
    container_name: vpn
    image: bubuntux/nordvpn:latest
    cap_add:
      - net_admin # required to modify network interfaces
    restart: unless-stopped
    devices:
      - /dev/net/tun
    environment:
      - USER=${VPN_USER} # vpn user, defined in .env
      - PASS=${VPN_PASSWORD} # vpn password, defined in .env
      - COUNTRY=${VPN_COUNTRY} # vpn country, defined in .env
      - NETWORK=${NETWORK} # local network mask, defined in .env
      - PROTOCOL=UDP
      - CATEGORY=P2P
      - OPENVPN_OPTS=--pull-filter ignore "ping-restart" --ping-exit 180
      - TZ=${TZ} # timezone, defined in .env
    ports:
      - 9091:9091 # Transmission web UI
      - 51413:51413 # Transmission bittorrent daemon
      - 51413:51413/udp # Transmission bittorrent daemon
      - 8112:8112 # port for deluge web UI to be reachable from local network

  organizr:
    container_name: organizr
    image: organizr/organizr:latest
    network_mode: host
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - ${CONFIG}/config/organizr:/config
    restart: unless-stopped

  ouroboros:
    container_name: ouroboros
    hostname: ouroboros
    image: pyouroboros/ouroboros
    environment:
      - CLEANUP=true
      - INTERVAL=300
      - LOG_LEVEL=info
      - SELF_UPDATE=true
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${CONFIG}/config/organizr:/config
    restart: unless-stopped

  deluge:
    container_name: deluge
    image: linuxserver/deluge:latest
    restart: unless-stopped
    network_mode: service:vpn # run on the vpn network
    #network_mode: host
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - ${ROOT}/downloads:/downloads # downloads folder
      - ${CONFIG}/config/deluge:/config # config files

  flaresolverr:
    container_name: falresolverr
    image: ghcr.io/flaresolverr/flaresolverr:latest
    restart: unless-stopped
    network_mode: host
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - ${CONFIG}/config/flaresolverr:/config # config files

  jackett:
    container_name: jackett
    image: linuxserver/jackett:latest
    restart: unless-stopped
    network_mode: host
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${ROOT}/downloads/torrent-blackhole:/downloads # place where to put .torrent files for manual download
      - ${CONFIG}/config/jackett:/config # config files

  nzbget:
    container_name: nzbge
    image: linuxserver/nzbget:latest
    restart: unless-stopped
    network_mode: host
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - ${ROOT}/downloads:/downloads # download folder
      - ${CONFIG}/config/nzbget:/config # config files

  sonarr:
    container_name: sonarr
    image: linuxserver/sonarr:latest
    restart: unless-stopped
    network_mode: host
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${CONFIG}/config/sonarr:/config # config files
      - ${ROOT}/tv:/tv # tv shows folder
      - ${ROOTNTFS}/completed/series:/series
      - ${ROOT}/downloads:/downloads # download folder

  radarr:
    container_name: radarr
    image: ghcr.io/linuxserver/radarr:latest
    restart: unless-stopped
    network_mode: host
#    ports:
#      - 7878:7878
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${CONFIG}/config/radarr:/config # config files
      - ${ROOT}/movies:/movies # movies folder
      - ${ROOTNTFS}/completed/movies:/films
      - ${ROOT}/downloads:/downloads # download folder
    
  bazarr:
    container_name: bazarr
    image: linuxserver/bazarr:latest
    restart: unless-stopped
    network_mode: host
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - ${CONFIG}/config/bazarr:/config # config files
      - ${ROOT}/movies:/movies # movies folder, same as Radarr
      - ${ROOTNTFS}/completed/movies:/films
      - ${ROOT}/tv:/tv # tv shows folder, same as Sonarr
      - ${ROOTNTFS}/completed/series:/series

  plex-server:
    container_name: plex-server
    image: greensheep/plex-server-docker-rpi:latest
    #image: linuxserver/plex:latest
    restart: unless-stopped
    network_mode: host
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
      - VERSION=docker
    volumes:
      - ${CONFIG}/config/plex/db:/config # plex database
      - ${CONFIG}/config/plex/transcode:/transcode # temp transcoded files
      - ${ROOT}/tv:/data/tvshows # tvshows library
      - ${ROOTNTFS}/completed/series:/series
      - ${ROOT}/movies:/data/movies # movies library
      - ${ROOTNTFS}/completed/movies:/films
      - ${ROOT}/comics:/comics
